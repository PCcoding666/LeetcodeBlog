动态规划

动规是由前一个状态推导出来的，而贪心是局部直接选最优的

解题五步骤：

确定dp数组（dp table）以及下标的含义
确定递推公式
dp数组如何初始化
确定遍历顺序
举例推导dp数组



509. 斐波那契数

确定dp数组（dp table）以及下标的含义
    dp[i]表示第i个斐波那契数列的值
确定递推公式
    F(n) = F(n - 1) + F(n - 2), for n > 1.
dp数组如何初始化
    F(0) = 0, F(1) = 1
确定遍历顺序
    从前向后
举例推导dp数组

70. 爬楼梯

确定dp数组（dp table）以及下标的含义

确定递推公式
dp数组如何初始化
确定遍历顺序
举例推导dp数组


 746. 使用最小花费爬楼梯 

复习一下动态规划五部曲

        # 确定dp数组的含义：到达i 位置的花费为dp[i]

        # 确定递推公式        dp[i] = min(dp[i-1] + cost[i-1, dp[i-2], cost[i-2]])

        # dp数组如何初始化 dp[0], dp[1] = 0, 0

        # 确定遍历顺序   

        # 举例推导dp数组




为什么需要 len(cost) + 1：

    表示顶端： 数组的最后一个位置 dp[len(cost)]（即 dp[n]）表示到达顶端的位置，而不是 cost 数组的最后一个台阶。
    方便状态转移： 在动态规划过程中，dp[i] 依赖于 dp[i-1] 和 dp[i-2]，所以 dp 数组的大小必须为 len(cost) + 1，否则在计算 dp[n] 时可能会出现越界错误。
